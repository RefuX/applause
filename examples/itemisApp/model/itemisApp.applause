tabbarApplication itemisApp {

	button {
		title="News"
		icon="calendar.png"
		view=EventList( CurrentTimeline() )
	} 

	button { 
		title= "Blog"
		icon= "chat.png"  
		view= BlogList(Blogposts())
	}

	button { 
		title= "Contact"
		icon= "microphone.png"  
		view= OfficeList(AllOffices())
	}
}

/*
 * DESCRIBING DATA
 */

type String mapsTo "NSString"

const SANITIZE_SHEET "http://heikobehrens.net/misc/jazoon11/sanitize.php?url="

entity Event {
	String id
	String kind
	String title
	String date
	String location
	String description
	String contact
	String link
	String speakers
}

entity Office {
	String location
	String summary
	String pictureurl
	String contact
	String phone
	String mail
	String address
}

contentprovider AllOffices 
	returns Office[]
	fetches XML from (SANITIZE_SHEET "https://spreadsheets.google.com/feeds/list/0Au3-oaNYhfPIdEpRQWxpZnJyX2JCNUdtT1Z4M1B4SkE/3/public/values")
	selects "feed.entry"

contentprovider OfficeResolver(Office o)
	resolves Office
	fetches XML from ("https://spreadsheets.google.com/feeds/list/0Au3-oaNYhfPIdEpRQWxpZnJyX2JCNUdtT1Z4M1B4SkE/3/public/values?sq=location%3D" urlconform(o.location) )
	selects "feed.entry"
	

tableview EventList(Event[] events) {
	title= "test"
	section {
		cell Subtitle foreach events as e {
			text= e.title
			details= e.date
			action= EventDetails(e)
		}
	} 
}

detailsview EventDetails(Event event) {
	title= "Event"
	header {
		title= event.title
		subtitle= (event.date " " event.location)
		details= event.description
	}
	
	section {
		cell Default {
			text= event.contact
			action= PersonDetails(PersonByName(event.contact))
		}
	}
	
	section {
		cell Default foreach split(event.speakers, ",") as s {
			text= s
			action= PersonDetails(PersonByName(s))
		}
	}
}

tableview OfficeList(Office[] offices) {
	title= "Offices"
	section {
		cell Default foreach offices as o {
			text= o.location
			action= OfficeDetails(o)
		}
	}
}

detailsview OfficeDetails(Office office) {
	title= "Office"
	header {
		title= office.location
		subtitle= office.address
		details= office.summary
	}
	
	section {
		cell Default {
			text= office.contact
			action= PersonDetails( PersonByName(office.contact) )
		}
	}

	section {
		cell Value2 {
			text= ""
			details= "Show on Map"
			action= ("http://maps.google.de/maps?q=" urlconform(office.address) )
		} 
		
		cell Value2 {
			text= "phone"
			details= office.phone
			action= ("tel:" office.phone)
		}
		
		cell Value2 {
			text= "mail"
			details= office.mail
			action= ("mailto:" office.mail)
		}
	}

}

contentprovider CurrentTimeline
	returns Event[]
	//fetches XML from "http://heikobehrens.net/misc/jazoon11/data.php"
	fetches XML from (SANITIZE_SHEET "https://spreadsheets.google.com/feeds/list/0Au3-oaNYhfPIdEpRQWxpZnJyX2JCNUdtT1Z4M1B4SkE/1/public/values") 
	selects "feed.entry"
	
contentprovider EventById(Event e)
	resolves Event
	fetches XML from (SANITIZE_SHEET urlconform(("https://spreadsheets.google.com/feeds/list/0Au3-oaNYhfPIdEpRQWxpZnJyX2JCNUdtT1Z4M1B4SkE/1/public/values?sq=id==" e.id)))
	selects "feed.entry"
	
contentprovider PersonByName(String name)
	returns Person
	fetches XML from (SANITIZE_SHEET urlconform(("https://spreadsheets.google.com/feeds/list/0Au3-oaNYhfPIdEpRQWxpZnJyX2JCNUdtT1Z4M1B4SkE/2/public/values?sq=id%3D" urlconform(replace(name, " ", "")))))
	selects "feed.entry"

entity BlogItem {
	String guid
	String title
	String link
	String description
	String creator
}

entity Person {
	String id
	String name
	String bio 
	String pictureurl
}

entity Speaker {
	String id
	String name
	String bio 
	String pictureurl
	Session[] sessions
}

entity Session {
	String id
	String title
	String description
	String date
	String timeslot
	String room
	Speaker[] speakers
}

/*
 * FETCHING DATA
 */

//const DATA_SERVER_URL "http://localhost:3000"
const DATA_SERVER_URL "http://eclipsecon2011-data.webbyapp.com"
const FEEDSANITIZER_URL "http://feedsanitizer.appspot.com"

contentprovider Blogposts
	returns BlogItem[]
	fetches XML
		from (FEEDSANITIZER_URL "/sanitize?url=http%3A%2F%2Fblogs.itemis.de%2F%3Fshowfeed%3D1&format=rss")
		selects "rss.channel.item"
		
contentprovider SessionsByDay(String day)
	returns Session[]
	fetches XML
		//from ("http://eclipsesummit2010.appspot.com/sessions/day/" day "/?format=xml")
		from (DATA_SERVER_URL "/sessions/day/" day ".xml")
		selects "sessions.session"
		 
contentprovider SessionById(Session s) 
	resolves Session
	fetches XML
	from (DATA_SERVER_URL "/sessions/id/" s.id ".xml" )
	selects "result.session"
	
contentprovider SpeakerById(Speaker s) 
	resolves Speaker
	fetches XML
	from (DATA_SERVER_URL "/speakers/id/" s.id ".xml")
	selects "result.speaker"
	

contentprovider BlogItemById(BlogItem b)
	resolves BlogItem
	fetches XML
		from (FEEDSANITIZER_URL "/sanitize?url=http%3A%2F%2Fblogs.itemis.de%2F%3Fshowfeed%3D1&format=rss&id=" urlconform(b.guid) )
		selects "rss.channel.item"

		
contentprovider AllSpeakers
	returns Speaker[]
	fetches XML
		from (DATA_SERVER_URL "/speakers.xml")
		selects "speakers.speaker"

contentprovider SpeakerByName(String name)
	returns Speaker
	fetches XML
		from (DATA_SERVER_URL "/speakers/name/" urlconform(name) ".xml")
		selects "result.speaker"
		
/*
 * DESCRIBING VIEWS
 */		

tableview BlogList(BlogItem[] items) {
	title= "News"
	section {
		cell Subtitle foreach items as item {
			text= item.creator
			details= item.title
			action= BlogDetails(item)
		}			
			
	}
}  

detailsview BlogDetails(BlogItem item) {
	title= "Post" 
	header {
		title= item.title
		details= item.description
	}
	section {
		cell Default {
			text= item.creator
			action= PersonDetails(PersonByName(item.creator))
		}		
		cell Default {
			text= "Open in Browser"
			action= item.link
		}
	}
} 

//tableview NewView(Session session) {
//	title= "foo" 
//}

detailsview PersonDetails(Person person) {
	title= "Person" 
	header {
		title= person.name
		details= person.bio
		image= person.pictureurl
	}
	
	
	section {
		cell Value2 {
			text= "mail"
			details= "some address"
			//action= ("mailto:"speaker.email) 
		}
		cell Value2 {
			text= "blog"
			details= "blog's url"
			// action= ("http://"speaker.blog) 
		}
	}
	
}

//	button {
//		title= "News"
//		icon= "chat.png" 
//		view= BlogList(Blogposts())
//	}

