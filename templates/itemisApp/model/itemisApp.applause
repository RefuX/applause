tabbarApplication itemisApp {

	button {
		title="Applause"
		icon="trophy.png"
		view= CommitList(allCommitsByRepository("applause/applause"))
	}
	
	button {
		title= "Peter"
		icon= "person.png"
		view= UserDetails(userData("peterfriese"))
	} 
 
	button {
		title= "Heiko"
		icon= "person.png"
		view= UserDetails(userData("hbehrens"))
	}
} 

/*
 * DESCRIBING DATA
 */

type String mapsTo "String"

entity RssItem {
	String guid
	String title
	String link
	String description
	String creator
}

// e.g. http://github.com/api/v2/xml/commits/list/applause/applause/master
entity Commit {
	String id
	String url
	String message
	User committer
}

entity User {
	String name
	String login
	String language
	String location
	
	String repos
	String followers
	String company
}

entity Repository {
	String description
	String watchers
	String name
	String owner
}

/*
 * Data Sources
 */
 
contentprovider allCommitsByRepository(String path) returns Commit[]
	fetches XML
	from ("http://github.com/api/v2/xml/commits/list/" path "/master")
	selects "commits.commit"
 
contentprovider userData(String login) returns User
	fetches XML
	from ("http://github.com/api/v2/xml/user/search/" login)
	selects "users.user"
	
contentprovider allRepositoriesByUser(String login) returns Repository[]
	fetches XML
	from ("http://github.com/api/v2/xml/repos/show/" login)
	selects "repositories.repository"
	
/*
 * Views
 */
 

 
tableview CommitList(Commit[] commits) {
	title= "Commits"
	section {
		cell Subtitle foreach commits as c {
			text= c.committer.name
			details= c.message
			action= UserDetails(userData(c.committer.login))
		}
	}
}

detailsview UserDetails(User user) {
	title= user.name
	header {
		title= user.name
		subtitle= user.location
		details= (user.followers " followers")
		
	}
	section {
		cell DefaultWithDisclosure {
			text= (user.repos " public repositories")
			action= RepositoryList(allRepositoriesByUser(user.login))
		}
	}
}

tableview RepositoryList(Repository[] repositories) {
	title= "Repositories"
	section {
		cell Subtitle foreach repositories as r {
			text= r.name
			details= r.description
			action= CommitList(allCommitsByRepository((r.owner "/" r.name)))
		} 
	}
}
