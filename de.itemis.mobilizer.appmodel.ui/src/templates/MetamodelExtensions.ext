import org::eclipse::emf::ecore;
import de::itemis::mobilizer::appModelDsl;

org::eclipse::emf::ecore::EObject eRootContainer(org::eclipse::emf::ecore::EObject this):
	JAVA templates.Extensions.getRootContainer(org.eclipse.emf.ecore.EObject);

model(org::eclipse::emf::ecore::EObject this):
	(Model)this.eRootContainer();

application(org::eclipse::emf::ecore::EObject this):
	model().application;

providersWithImplementation(Application this):
	model().elements.typeSelect(ContentProvider);
	
entities(Application this):
	model().elements.typeSelect(Entity);

listViews(Application this):
	model().elements.typeSelect(TableView);

detailViews(Application this):
	model().elements.typeSelect(DetailsView);

sectionedViews(Application this):
	model().elements.typeSelect(SectionedView);
	
type(SectionedView this):
	this.content.description.type.name;
	
List[ObjectReference] referencesIn(ScalarExpression this):
	JAVA de.itemis.mobilizer.scoping.TypeUtil.getReferencesIn(de.itemis.mobilizer.appModelDsl.ScalarExpression);

resolversReference(ContentProvider this):
	url.referencesIn().selectFirst(e|!Constant.isInstance(e.object));
	
contentProvider(ProviderConstruction this):
	SimpleProviderConstruction.isInstance(this)
		? ((SimpleProviderConstruction)this).resolver()
		: ((ComplexProviderConstruction)this).provider;
		
ContentProvider resolver(SimpleProviderConstruction this):
	JAVA de.itemis.mobilizer.validation.AppModelDslJavaValidator.findResolver(de.itemis.mobilizer.appModelDsl.SimpleProviderConstruction);				
	
private List[ObjectReference] toList(Void this):
	{};

List[ObjectReference] toList(ObjectReference this):
	{object.name}.addAll(tail.toList());

	