«IMPORT de::itemis::mobilizer::appModelDsl»

«EXTENSION templates::MetamodelExtensions»
«EXTENSION templates::wp7::GeneratorExtensions»
«EXTENSION templates::wp7::WP7ViewExtensions»

«DEFINE main FOR Application-»
«FILE this.mainViewCSFileName()-»
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Shapes;
using Microsoft.Phone.Controls;
using «namespace()».ViewModels;

namespace «namespace()»
{
	public partial class «mainPageClassName()» : PhoneApplicationPage
	{
		// Constructor
		public «mainPageClassName()»()
		{
			InitializeComponent();
			«EXPAND assignDataContextToPivotItem FOREACH this.buttons-»
			this.Loaded += new RoutedEventHandler(MainPage_Loaded);
		}

		// Load data for the ViewModel Items
		private void «mainPageClassName()»_Loaded(object sender, RoutedEventArgs e)
		{
			if (!App.RootViewModelProvider.IsDataLoaded)
			{
				App.RootViewModelProvider.LoadData();
			}
		}
		«EXPAND selectionHandler FOREACH this.buttons-»
	}
}
«ENDFILE»
«ENDDEFINE»

«DEFINE assignDataContextToPivotItem FOR TabbarButton-»
			«this.pivotControlName()».DataContext = App.RootViewModelProvider.«this.view.viewModelProviderClassName()»(«this.view.viewModelProviderConstructionParameter()»);
«ENDDEFINE»

«DEFINE selectionHandler FOR TabbarButton»
		private void «selectionHandlerName()»(object sender, SelectionChangedEventArgs e)
		{
			«IF this.revealDetailsAction() != null-»
			if («pivotControlName()».SelectedIndex == -1)
				return;
			NavigationService.Navigate(new Uri("/Generated/«this.revealDetailsAction().view.viewXAMLFileName()»?itemByIndex=" + «pivotControlName()».SelectedIndex, UriKind.Relative));
			«ENDIF»			
		}
«ENDDEFINE»
