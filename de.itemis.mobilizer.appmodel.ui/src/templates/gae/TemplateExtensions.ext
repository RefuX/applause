import org::eclipse::emf::ecore;
import de::itemis::mobilizer::appModelDsl;

extension templates::gae::Extensions; 

viewCssClasses(View this):
	"";
	
viewCssClasses(TableView this):
	"table list";
		
viewCssClasses(DetailsView this):
	"details";
	
tplCellForLoop(SectionCell this):
	iterator == null 
		? ""
		: "{% for " + iterator.name + " in " + iterator.collection._expression("data") + "|to_list %}";

String _expression(CollectionExpression this, String target):
	"!_expression-" + this.metaType;
	
List[ObjectReference] toList(Void this):
	{};

List[ObjectReference] toList(ObjectReference this):
	{object.name}.addAll(tail.toList());

String _expression(ObjectReference this, String target):
	{target}.addAll(toList().withoutFirst()).toString(".");

String expression(ScalarExpression this, String target):
	"!expression-" + this.metaType;
	
expression(StringLiteral this, String target):
	value;
	
expression(StringConcat this, String target):
	values.expression(target).toString("");
		
String expression(VariableDeclaration this, String target):
	"!expression-" + this.metaType;
	
String expression(Constant this, String target):
	expression(value, target);		
	
String expression(ObjectReference this, String target):
	Constant.isInstance(object)
		? expression(object, target)
		: "{{" + _expression(target) + "}}";
		
tplPrepareUrl(ViewAction this, String var):
	"";
	
tplPrepareUrl(ViewCall this, String var):	
	"{% url views." + defViewName() + " as " + var + " %}";
	
tplUrl(ViewAction this, String var):
	"";
	
tplUrl(ViewCall this, String var):
	"{{ " + var + " }}";
	
tplUrl(ExternalOpen this, String var):
	this.url.expression(var);
	
cellContextVar(SectionCell this):
	iterator == null ? "data" : iterator.name; 	