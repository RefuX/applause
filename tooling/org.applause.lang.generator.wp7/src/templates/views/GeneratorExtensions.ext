import org::eclipse::emf::ecore;
import org::applause::lang::applauseDsl;

extension extensions::MetamodelExtensions; 
extension extensions::GeneratorExtensions;

/**
 * View
 */
namespace(View this):
	rootNamespace() + ".Views";
	
className(DetailsView this):
	this.name.toFirstUpper() + "Page";
	
constructorName(DetailsView this):
	this.name.toFirstUpper() + "Page";	
	
classFQN(DetailsView this):
	namespace() + "." + className();

xamlFilename(String this):
	"../Views/" + this + ".xaml";
	
classFilename(String this):
	 this.xamlFilename() + ".cs";

xamlFileName(DetailsView this):
	className().xamlFilename();
		
classFilename(DetailsView this):
	className().classFilename();
	
binding(ScalarExpression this):
	"!toot" + this;
	
binding(ObjectReference this):
	'"{Binding ' + this.expression().split('\\.').last() + '}"';
	
binding(StringLiteral this):
	this.expression();
	
binding(StringConcat this):
	'"TODO: StringConcat"';// this.expression();	
	
listboxName(View this):
	this.name.toFirstUpper() + "Listbox";
	
/**
 * MainView
 */
namespace(Application this):
	rootNamespace() + ".Views";
	
xamlFilename(Application this):
	className().xamlFilename();
	
classFilename(Application this):
	className().classFilename();
	
className(Application this):
	"MainPage";
	
List[SectionCell] uniqueSectionCells(List[SectionCell] this):
	JAVA templates.views.Extensions.uniqueSectionCells(java.util.List);

/**
 * ViewModel
 * TODO: refactor structure of extensions - better have them all in one file.
 */	
viewModelNamespace(View this):
	rootNamespace() + ".ViewModel"; 
	
viewModelClassName(View this):
	this.name.toFirstUpper() + "ViewModel";
	
contentPropertyname(SectionedView this):
	this.content.description.type.name;
	
/**
 * Sections
 */
sectionListboxName(SectionedView this):
	this.name.toFirstUpper() + "SectionsListBox";
	
sectionListboxSemplateSelectorClassname(SectionedView this):
	this.name.toFirstUpper() + "TemplateSelector";
	
sectionListboxSectionName(SectionedView this, int i):
	"Section" + i + "Template";
	
sectionListboxSectionNavigationCommandname(SectionedView this, int i):
	"Section" + i + "NavigationCommand";